name: protobuf

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:

env:
  BUILDER_BASE_IMAGE: greenvine/hey-grpc-nodejs-builder:latest

jobs:
  lint_protobuf:
    name: Lint Protobuf
    runs-on: ubuntu-20.04
    steps:
      - id: checkout_repo
        name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - id: lint_protobuf
        name: Lint Protobuf
        run: make lint DOCKER_IMAGE="${{ env.BUILDER_BASE_IMAGE }}"

  build_protobuf:
    name: Generate & Push Protobuf
    runs-on: ubuntu-20.04
    needs:
      - lint_protobuf
    env:
      PROTOGEN_REPO: greenvine/hey-grpc-starter-interface
      PROTOGEN_DIR: proto_gen_repo
      PROTO_SYNC_COMMITTER_NAME: Sync Bot
      PROTO_SYNC_COMMITTER_EMAIL: actions@github.com
    steps:
      - id: checkout_proto_repo
        name: Checkout Protobuf source repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - id: checkout_protogen_repo
        name: Checkout Protobuf interface repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.PROTOGEN_REPO }}
          ssh-key: ${{ secrets.PROTOGEN_REPO_SSH_KEY }}
          ref: master
          path: ${{ env.PROTOGEN_DIR }}

      - id: gen_protobuf
        name: Generate Protobuf
        run: make build DOCKER_IMAGE="${{ env.BUILDER_BASE_IMAGE }}"

      # Fix file permissions and go package path, then copy proto_gen to interface repository
      - id: copy_protogen
        name: Copy generated Protobuf
        run: |
          sudo chown -R runner:docker proto_gen
          rm -rf "${{ env.PROTOGEN_DIR }}/gen"
          cp -rfp "proto_gen/go/github.com/${{ env.PROTOGEN_REPO }}/gen/go/." proto_gen/go
          rm -rf proto_gen/go/github.com
          cp -rf proto_gen "${{ env.PROTOGEN_DIR }}/gen"

      - id: list_protogen
        name: List generated Protobuf
        working-directory: ${{ env.PROTOGEN_DIR }}
        run: find gen -type f

      - id: get_tag_name
        name: Get current tag
        run: |
          if [[ "${GITHUB_REF}" == 'refs/tags/'* ]]; then
            echo ::set-output name=tag_name::${GITHUB_REF/refs\/tags\//}
          else
            echo ::set-output name=tag_name::''
          fi

      - id: push_protogen
        name: Push to interface repository
        uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ github.event_name != 'pull_request' }}
        with:
          repository: ${{ env.PROTOGEN_DIR }}
          commit_message: Sync from commit ${{ github.sha }}
          file_pattern: gen/
          commit_user_name: ${{ env.PROTO_SYNC_COMMITTER_NAME }}
          commit_user_email: ${{ env.PROTO_SYNC_COMMITTER_EMAIL }}
          tagging_message: ${{ steps.get_tag_name.outputs.tag_name }}
          push_options: '--force'
          skip_dirty_check: false

      - id: prepare_tag_protogen
        name: Pre Tag Protobuf interface repository
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' && steps.get_tag_name.outputs.tag_name != '' }}
        with:
          repository: ${{ env.PROTOGEN_REPO }}
          ssh-key: ${{ secrets.PROTOGEN_REPO_SSH_KEY }}
          path: ${{ env.PROTOGEN_DIR }}

      - id: tag_protogen
        name: Tag Protobuf interface repository
        env:
          TAG_NAME: ${{ steps.get_tag_name.outputs.tag_name }}
        if: ${{ github.event_name != 'pull_request' && steps.get_tag_name.outputs.tag_name != '' }}
        run: |
          cd "${PROTOGEN_DIR}"
          git config --global user.email "${PROTO_SYNC_COMMITTER_EMAIL}"
          git config --global user.name "${PROTO_SYNC_COMMITTER_NAME}"
          git tag -af "${TAG_NAME}" -m "Sync from tag: ${TAG_NAME} (commit ${GITHUB_SHA})"
          git push -f origin "${TAG_NAME}"
